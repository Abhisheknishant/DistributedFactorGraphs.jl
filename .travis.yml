language: julia
sudo: required

os:
    - linux

julia:
    - 1.0
    - 1.1
    - 1.2
    - 1.3
    - nightly

notifications:
    email: false

matrix:
  allow_failures:
    - julia: nightly

before_install:
  - wget dist.neo4j.org/neo4j-community-3.3.5-unix.tar.gz
  - tar -xzf neo4j-community-3.3.5-unix.tar.gz
  - sed -i 's/#dbms.security.auth_enabled=false/dbms.security.auth_enabled=false/g' neo4j-community-3.3.5/conf/neo4j.conf
  - sed -i 's/dbms.security.auth_enabled=true/dbms.security.auth_enabled=false/g' neo4j-community-3.3.5/conf/neo4j.conf
  - neo4j-community-3.3.5/bin/neo4j start

before_script:
  - curl http://neo4j:neo4j@localhost:7474/db/data/labels

# script:
#   - if [[ -a .git/shallow ]]; then git fetch --unshallow; fi
#   - julia --project --check-bounds=yes -e 'using UUIDs; write("Project.toml", replace(read("Project.toml", String), r"uuid = .*?\n" =>"uuid = \"$(uuid4())\"\n"));
# import Pkg; Pkg.build("DistributedFactorGraphs"); Pkg.test("DistributedFactorGraphs"; coverage=true)'

# script:
#   - if [[ -a .git/shallow ]]; then git fetch --unshallow; fi
#   - julia --check-bounds=yes -e 'using Pkg; Pkg.clone(pwd()); Pkg.build("DistributedFactorGraphs"); Pkg.test("DistributedFactorGraphs"; coverage=true)'

# can be used if master of package is required
# script:
#     - julia --project --color=yes --check-bounds=yes -e 'using Pkg; Pkg.add(PackageSpec(name="MetaGraphs", rev="master")); Pkg.build(); Pkg.test(coverage=true)'

after_success:
    - julia -e 'using Pkg; cd(Pkg.dir("DistributedFactorGraphs")); Pkg.add("Coverage"); using Coverage; Codecov.submit(process_folder()); Coveralls.submit(process_folder())'

jobs:
  include:
    - stage: "Documentation"
      julia: 1.0
      os: linux
      script:
        - julia -e 'import Pkg; Pkg.add("Documenter"); Pkg.add("DataFrames")'
        - julia --project=docs/ -e 'using Pkg; Pkg.develop(PackageSpec(path=pwd()));
                                               Pkg.instantiate()'
        - julia --project=docs/ docs/make.jl
      after_success: skip

    - stage: "IIF Driver Tests"
      julia: 1.2
      os: linux
      script:
        - julia -e 'import Pkg; Pkg.add("IncrementalInference"); Pkg.test("DistributedFactorGraphs")'
      after_success: skip
